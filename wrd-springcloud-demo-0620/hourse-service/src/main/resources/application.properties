#应用配置
spring.application.name=hourse-service
server.port=8081
#图片访问
#自定义配置
#开启文件批量上传的starter程序，注入fileService
file.enable=true
#文件的上传位置
file.path=D:\\pic\\
#文件访问的前缀
file.domain=http://localhost:8081/
#定义静态文件的位置，图片上传位置的绑定
spring.resources.static-locations=file:${file.path}

#数据源
spring.datasource.url=jdbc:mysql://localhost:3306/five-lx2?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=123123
#全局设置@JsonFormat的格式pattern
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#设置全局时区
spring.jackson.time-zone=GMT+8
#不为空的属性才会序列化
spring.jackson.default-property-inclusion=non_null
#java.util.date转换成timestamp
spring.jackson.serialization.write-dates-as-timestamps=false
#对象为空时是否报错，默认true
spring.jackson.serialization.fail-on-empty-beans=false
#json中含pojo不存在属性时是否失败报错,默认true
spring.jackson.deserialization.fail-on-unknown-properties=false
#mybatis-plus配置
mybatis-plus.type-aliases-package=com.wrd.entity
mybatis-plus.mapper-locations=classpath:mappers/*.xml
mybatis.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# FreeMarker Mvc配置
# 编码格式
spring.freemarker.charset=UTF-8
# freemarker模板后缀 默认是 .ftl
spring.freemarker.suffix=.html
#模板加载路径,默认路径是 classpath:/templates/
spring.freemarker.template-loader-path=classpath:/templates
#Content-Type值
spring.freemarker.content-type=text/html;charset=utf-8
#禁用模板缓存
spring.freemarker.cache=false
#数字格式化
spring.freemarker.settings.number_format=0.##

#redis配置
spring.redis.host=192.168.214.128
spring.redis.port=6379 
spring.redis.database=0

#指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.214.128:9092
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# 指定默认消费者group id
spring.kafka.consumer.group-id=test-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#发送消息，会自动创建主题，当主题未创建时，监听会报错，服务无法启动
spring.kafka.listener.missing-topics-fatal=false


#es配置
# 9200端口是用来让HTTP REST API来访问ElasticSearch，# 而9300端口是传输层监听的默认端口
spring.data.elasticsearch.cluster-nodes=192.168.214.128:9300
# cluster.name需要与config/elasticsearch.yml中的cluster.name一致
spring.data.elasticsearch.cluster-name=elasticsearch
#Spring data 使用
spring.data.elasticsearch.repositories.enabled=true

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#开始feign.hystrix的功能
feign.hystrix.enabled=true

